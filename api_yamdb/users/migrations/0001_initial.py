# Generated by Django 3.2 on 2024-12-05 15:20

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('password',
                 models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last login'
                )),
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text='Designates that this user has all permissions '
                              'without explicitly assigning them.',
                    verbose_name='superuser status'
                )),
                ('is_staff', models.BooleanField(
                    default=False,
                    help_text='Designates whether the user can log into this '
                              'admin site.',
                    verbose_name='staff status'
                )),
                ('is_active', models.BooleanField(
                    default=True,
                    help_text='Designates whether this user should be '
                              'treated as active. Unselect this instead of '
                              'deleting accounts.',
                    verbose_name='active'
                )),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='date joined'
                )),
                ('username', models.CharField(
                    max_length=150,
                    unique=True,
                    validators=[django.core.validators.RegexValidator(
                        message='Имя пользователя содержит недопустимый '
                                'символ',
                        regex='^[\\w.@+-]+$'
                    )],
                    verbose_name='Имя пользователя'
                )),
                ('email', models.EmailField(
                    max_length=254,
                    unique=True,
                    verbose_name='Электронная почта'
                )),
                ('first_name', models.CharField(
                    blank=True,
                    max_length=150,
                    verbose_name='Имя'
                )),
                ('last_name', models.CharField(
                    blank=True,
                    max_length=150,
                    verbose_name='Фамилия'
                )),
                ('bio', models.TextField(blank=True, verbose_name='О себе')),
                ('role', models.CharField(
                    choices=[('user', 'Пользователь'),
                             ('moderator', 'Модератор'), ('admin', 'Админ')],
                    default='user',
                    max_length=20,
                    verbose_name='Роль пользователя'
                )),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text='The groups this user belongs to.',
                    related_name='custom_user_set',
                    to='auth.Group',
                    verbose_name='groups'
                )),
                ('user_permissions', models.ManyToManyField(
                    blank=True,
                    help_text='Specific permissions for this user.',
                    related_name='custom_user_set',
                    to='auth.Permission',
                    verbose_name='user permissions'
                )),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
